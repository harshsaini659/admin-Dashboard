<%- include('../partials/header') %>
<%- include('../partials/sidebar') %>
        <main class="main-wrap">
<%- include('../partials/navbar') %>
            <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title"><%= title %></h2>
                        <p>Add a new product to your inventory</p>
                    </div>
                    <div>
                        <a href="/admin/user/products" class="btn btn-light">
                            <i class="material-icons md-arrow_back"></i> Back to Products
                        </a>
                    </div>
                </div>
                
                <!-- Error Message -->
                <% if (typeof error !== 'undefined' && error) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <%= error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>
                
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Product Information</h4>
                            </div>
                            <div class="card-body">
                                <form id="productForm">
                                    <div class="mb-4">
                                        <label for="productName" class="form-label">Product Name <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="productName" name="name" required>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-4">
                                                <label for="productCategory" class="form-label">Category <span class="text-danger">*</span></label>
                                                <select class="form-select" id="productCategory" name="category" required>
                                                    <option value="">Select Category</option>
                                                    <% if (typeof categories !== 'undefined' && categories.length > 0) { %>
                                                        <% categories.forEach(category => { %>
                                                            <option value="<%= category._id %>"><%= category.name %></option>
                                                        <% }) %>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-4">
                                                <label for="variantStatus" class="form-label">Status</label>
                                                <select class="form-select" id="variantStatus" name="status">
                                                    <option value="active" selected>Active</option>
                                                    <option value="inactive">Inactive</option>
                                                </select>
                                                <div class="form-text">Set the product availability status</div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="mb-4">
                                                <label for="productVariant" class="form-label">Variant <span class="text-danger">*</span></label>
                                                <select class="form-select" id="productVariant" name="variant" required>
                                                    <option value="">Select Variant</option>
                                                    <% if (typeof variants !== 'undefined' && variants.length > 0) { %>
                                                        <% variants.forEach(variant => { %>
                                                            <option value="<%= variant._id %>"><%= variant.name %></option>
                                                        <% }) %>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="mb-4">
                                                <label for="productVariantAtt" class="form-label">Variant Attribute <span class="text-danger">*</span></label>
                                                <select class="form-select" id="productVariantAtt" name="variantAttribute" required>
                                                    <option value="">Select Variant Attribute</option>
                                                    <% if (typeof variantAttributes !== 'undefined' && variantAttributes.length > 0) { %>
                                                        <% variantAttributes.forEach(variantAttribute => { %>
                                                            <option value="<%= variantAttribute._id %>"><%= variantAttribute.name %></option>
                                                        <% }) %>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Short Description Field -->
                                    <div class="mb-4">
                                        <label for="productShortDescription" class="form-label">Short Description <span class="text-danger">*</span></label>
                                        <textarea class="form-control" id="productShortDescription" name="shortDescription" rows="2" required placeholder="Brief summary of the product"></textarea>
                                    </div>
                                    
                                    <!-- Rich Text Description Field -->
                                    <div class="mb-4">
                                        <label for="productDescription" class="form-label">Description <span class="text-danger">*</span></label>
                                        <div id="descriptionEditor" style="height: 200px;"></div>
                                        <textarea class="form-control d-none" id="productDescription" name="description" required></textarea>
                                    </div>
                                    
                                    <!-- Image Upload Field -->
                                    <div class="mb-4">
                                        <label for="productImage" class="form-label">Product Image</label>
                                        <input type="file" class="form-control" id="productImage" name="image" accept="image/*">
                                        <div class="form-text">Upload product image (JPEG, PNG, WEBP - Max 5MB)</div>
                                        
                                        <!-- Image Preview Container -->
                                        <div id="imagePreviewContainer" class="mt-3" style="display: none;">
                                            <div class="card" style="max-width: 300px;">
                                                <div class="card-body p-2">
                                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                                        <small class="text-muted">Image Preview</small>
                                                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeImagePreview()">
                                                            <i class="material-icons md-close"></i>
                                                        </button>
                                                    </div>
                                                    <img id="imagePreview" src="" alt="Preview" class="img-fluid rounded" style="max-height: 200px; object-fit: cover;">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Action Buttons at Bottom -->
                <div class="row justify-content-center">
                    <div class="col-lg-8">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <a href="/admin/user/products" class="btn btn-light">
                                        <i class="material-icons md-cancel"></i> Cancel
                                    </a>
                                    <div class="d-flex gap-2">
                                        <button type="button" class="btn btn-secondary" onclick="saveDraft()">
                                            <i class="material-icons md-drafts"></i> Save as Draft
                                        </button>
                                        <button type="button" class="btn btn-primary" onclick="saveProduct()">
                                            <i class="material-icons md-save"></i> Save Product
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        
        </script>
        
        <!-- Quill Rich Text Editor -->
        <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
        <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
        
        <script>
            let quill;
            
            // Initialize Quill editor
            document.addEventListener('DOMContentLoaded', function() {
                quill = new Quill('#descriptionEditor', {
                    theme: 'snow',
                    placeholder: 'Enter detailed product description...',
                    modules: {
                        toolbar: [
                            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                            [{ 'font': [] }],
                            [{ 'size': ['small', false, 'large', 'huge'] }],
                            ['bold', 'italic', 'underline', 'strike'],
                            [{ 'color': [] }, { 'background': [] }],
                            [{ 'script': 'sub'}, { 'script': 'super' }],
                            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                            [{ 'indent': '-1'}, { 'indent': '+1' }],
                            [{ 'align': [] }],
                            ['blockquote', 'code-block'],
                            ['link', 'image'],
                            ['clean']
                        ]
                    }
                });
                
                // Initialize image upload preview
                initializeImagePreview();
                
                // Auto-dismiss alerts
                const alerts = document.querySelectorAll('.alert.alert-dismissible');
                alerts.forEach(function(alert) {
                    setTimeout(function() {
                        const bsAlert = new bootstrap.Alert(alert);
                        bsAlert.close();
                    }, 5000);
                });
            });
            
            // Collect form data
            function collectFormData() {
                const form = document.getElementById('productForm');
                const formData = new FormData(form);
                
                // Get rich text content from Quill editor
                const description = quill.getContents();
                const descriptionHTML = quill.root.innerHTML;
                
                // Get image file
                const imageFile = document.getElementById('productImage').files[0];
                
                const data = {
                    name: formData.get('name'),
                    shortDescription: formData.get('shortDescription'),
                    description: descriptionHTML,
                    category: formData.get('category'),
                    status: formData.get('status'),
                    variant: formData.get('variant'),
                    variantAttribute: formData.get('variantAttribute'),
                    hasImage: !!imageFile
                };
                
                // If there's an image, we'll need to handle file upload separately
                if (imageFile) {
                    data.imageFile = imageFile;
                }
                
                return data;
            }
            
            // Save product
            function saveProduct() {
                const formData = collectFormData();
                formData.status = formData.status || 'active'; // Ensure status is set
                submitProduct(formData);
            }
            
            // Save as draft
            function saveDraft() {
                const formData = collectFormData();
                formData.status = 'inactive'; // Draft is always inactive
                submitProduct(formData);
            }
            
            // Submit product
            function submitProduct(data) {
                // Create FormData for file upload
                const formData = new FormData();
                
                // Add regular form fields
                formData.append('name', data.name);
                formData.append('shortDescription', data.shortDescription);
                formData.append('description', data.description);
                formData.append('category', data.category);
                formData.append('status', data.status);
                formData.append('variant', data.variant);
                formData.append('variantAttribute', data.variantAttribute);
                
                // Add image file if present
                if (data.imageFile) {
                    formData.append('image', data.imageFile);
                }
                
                fetch('/admin/user/products/create', {
                    method: 'POST',
                    body: formData // Don't set Content-Type header, let browser set it with boundary
                })
                .then(response => response.json())
                .then(result => {
                    if (result.message && result.message.includes('successfully')) {
                        window.location.href = '/admin/user/products?success=' + encodeURIComponent(result.message);
                    } else {
                        throw new Error(result.message || 'Unknown error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error saving product: ' + error.message);
                });
            }
            
            // Initialize image preview functionality
            function initializeImagePreview() {
                const imageInput = document.getElementById('productImage');
                const previewContainer = document.getElementById('imagePreviewContainer');
                const previewImage = document.getElementById('imagePreview');
                
                imageInput.addEventListener('change', function(event) {
                    const file = event.target.files[0];
                    
                    if (file) {
                        // Validate file type
                        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
                        if (!allowedTypes.includes(file.type)) {
                            alert('Please select a valid image file (JPEG, PNG, or WEBP)');
                            this.value = '';
                            previewContainer.style.display = 'none';
                            return;
                        }
                        
                        // Validate file size (5MB max)
                        const maxSize = 5 * 1024 * 1024; // 5MB in bytes
                        if (file.size > maxSize) {
                            alert('File size must be less than 5MB');
                            this.value = '';
                            previewContainer.style.display = 'none';
                            return;
                        }
                        
                        // Create FileReader to read the file
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            previewImage.src = e.target.result;
                            previewContainer.style.display = 'block';
                        };
                        reader.readAsDataURL(file);
                    } else {
                        previewContainer.style.display = 'none';
                    }
                });
            }
            
            // Remove image preview
            function removeImagePreview() {
                const imageInput = document.getElementById('productImage');
                const previewContainer = document.getElementById('imagePreviewContainer');
                
                imageInput.value = '';
                previewContainer.style.display = 'none';
            }
            
            // Event listeners
            document.addEventListener('DOMContentLoaded', function() {
                // Auto-dismiss alerts
                const alerts = document.querySelectorAll('.alert.alert-dismissible');
                alerts.forEach(function(alert) {
                    setTimeout(function() {
                        const bsAlert = new bootstrap.Alert(alert);
                        bsAlert.close();
                    }, 5000);
                });
            });
        </script>
<%- include('../partials/footer') %>
    </body>
</html>
